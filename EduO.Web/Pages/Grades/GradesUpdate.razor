@page "/grades/updategrade/{id:int}"

<h2>Update Grade Form</h2>

@if(_grade != null)
{
    <EditForm Model="_grade" OnValidSubmit="Update" class="card card-body bg-light mt-5">
        <DataAnnotationsValidator />
        <div class="form-group row">
            <label for="name" class="col-md-2 col-form-label">Name:</label>
            <div class="col-md-10">
                <InputText id="name" class="form-control" @bind-Value="_grade.Name" />
                <ValidationMessage For="@(() => _grade.Name)" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 text-right">
                <button type="submit" class="btn btn-success">Update</button>
            </div>
        </div>
    </EditForm>
    <SuccessNotification @ref="_notification" />
}

@code {
    private GradeDto _grade;
    private SuccessNotification _notification;
    [Inject]
    IBaseService<GradeDto> GradeService { get; set; }

    [Parameter]
    public int id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _grade = await GradeService.GetByIdAsync(id);
    }

    private async Task Update()
    {
        await GradeService.Update(_grade);
        _notification.Show();
    }
}
